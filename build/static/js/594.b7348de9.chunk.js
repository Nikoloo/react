"use strict";(self.webpackChunkspotify_webapp=self.webpackChunkspotify_webapp||[]).push([[594],{594:(e,t,o)=>{o.d(t,{A:()=>i,spotifyAuth:()=>a});class r{constructor(e){this.clientId=void 0,this.redirectUri=void 0,this.scopes=void 0,this.codeVerifier="",this.clientId=e.clientId,this.redirectUri=e.redirectUri,this.scopes=e.scopes}generateCodeVerifier(){const e=new Uint8Array(32);return crypto.getRandomValues(e),btoa(String.fromCharCode.apply(null,Array.from(e))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}async generateCodeChallenge(e){const t=(new TextEncoder).encode(e),o=await crypto.subtle.digest("SHA-256",t);return btoa(String.fromCharCode.apply(null,Array.from(new Uint8Array(o)))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}async initiateAuth(){this.codeVerifier=this.generateCodeVerifier();const e=await this.generateCodeChallenge(this.codeVerifier);localStorage.setItem("spotify_code_verifier",this.codeVerifier);const t=`https://accounts.spotify.com/authorize?${new URLSearchParams({client_id:this.clientId,response_type:"code",redirect_uri:this.redirectUri,code_challenge_method:"S256",code_challenge:e,scope:this.scopes.join(" "),state:this.generateState()}).toString()}`;window.location.href=t}generateState(){const e=new Uint8Array(16);crypto.getRandomValues(e);const t=btoa(String.fromCharCode.apply(null,Array.from(e)));return localStorage.setItem("spotify_auth_state",t),t}async handleCallback(e,t){if(t!==localStorage.getItem("spotify_auth_state"))throw new Error("Invalid state parameter");const o=localStorage.getItem("spotify_code_verifier");if(!o)throw new Error("Code verifier not found");const r=await this.exchangeCodeForToken(e,o);return localStorage.removeItem("spotify_code_verifier"),localStorage.removeItem("spotify_auth_state"),this.storeTokens(r),r}async exchangeCodeForToken(e,t){const o=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"authorization_code",code:e,redirect_uri:this.redirectUri,client_id:this.clientId,code_verifier:t})});if(!o.ok){const e=await o.json();throw new Error(`Token exchange failed: ${e.error_description}`)}return o.json()}async refreshToken(){const e=localStorage.getItem("spotify_refresh_token");if(!e)throw new Error("No refresh token available");const t=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"refresh_token",refresh_token:e,client_id:this.clientId})});if(!t.ok){const e=await t.json();throw new Error(`Token refresh failed: ${e.error_description}`)}const o=await t.json();return this.storeTokens(o),o}storeTokens(e){const t=Date.now()+1e3*e.expires_in;localStorage.setItem("spotify_access_token",e.access_token),localStorage.setItem("spotify_token_expiration",t.toString()),e.refresh_token&&localStorage.setItem("spotify_refresh_token",e.refresh_token)}async getValidToken(){const e=localStorage.getItem("spotify_access_token"),t=localStorage.getItem("spotify_token_expiration");if(!e||!t)return null;if(Date.now()>parseInt(t)-3e5)try{return(await this.refreshToken()).access_token}catch(o){return console.error("Token refresh failed:",o),this.logout(),null}return e}isAuthenticated(){const e=localStorage.getItem("spotify_access_token"),t=localStorage.getItem("spotify_token_expiration");return!(!e||!t)&&Date.now()<parseInt(t)}async getCurrentUser(){const e=await this.getValidToken();if(!e)throw new Error("No valid token available");const t=await fetch("https://api.spotify.com/v1/me",{headers:{Authorization:`Bearer ${e}`}});if(!t.ok)throw new Error("Failed to get user data");return t.json()}logout(){localStorage.removeItem("spotify_access_token"),localStorage.removeItem("spotify_refresh_token"),localStorage.removeItem("spotify_token_expiration"),localStorage.removeItem("spotify_code_verifier"),localStorage.removeItem("spotify_auth_state")}static parseCallback(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:window.location.href;const t=new URLSearchParams(new URL(e).search);return{code:t.get("code")||void 0,state:t.get("state")||void 0,error:t.get("error")||void 0}}}const a=new r({clientId:{NODE_ENV:"production",PUBLIC_URL:"/spotify-webapp",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_SPOTIFY_CLIENT_ID||"",redirectUri:{NODE_ENV:"production",PUBLIC_URL:"/spotify-webapp",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.REACT_APP_SPOTIFY_REDIRECT_URI||`${window.location.origin}/callback`,scopes:["user-read-private","user-read-email","user-library-read","user-library-modify","user-read-playback-state","user-modify-playback-state","user-read-currently-playing","playlist-read-private","playlist-modify-private","playlist-modify-public","user-follow-read","user-follow-modify","user-read-recently-played","user-top-read"]}),i=r}}]);
//# sourceMappingURL=594.b7348de9.chunk.js.map